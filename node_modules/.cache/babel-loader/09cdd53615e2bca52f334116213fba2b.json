{"ast":null,"code":"var _jsxFileName = \"/Users/elizabethshim/Documents/GitHub/udemy front to back/github-finder/src/App.js\";\nimport React, { Fragment, Component } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Users from './components/users/Users';\nimport User from './components/users/User';\nimport Search from './components/users/Search';\nimport Alert from './components/layout/Alert';\nimport About from './components/pages/About';\nimport axios from 'axios';\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      users: [],\n      user: {},\n      loading: false,\n      alert: null\n    };\n\n    this.searchUsers = async text => {\n      this.setState({\n        loading: true\n      }); // spinner as it searches\n\n      const res = await axios.get(`https://api.github.com/search/users?q=${text}&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secrets=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`); // res is request\n\n      this.setState({\n        users: res.data.items,\n        loading: false\n      });\n    };\n\n    this.getUser = async username => {\n      this.setState({\n        loading: true\n      });\n      const res = await axios.get(`https://api.github.com/users/${username}?client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}\n        &client_secrets=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`); // res is request\n\n      this.setState({\n        user: res.data,\n        loading: false\n      });\n    };\n\n    this.clearUsers = () => this.setState({\n      users: [],\n      loading: false\n    });\n\n    this.setAlert = (msg, type) => {\n      this.setState({\n        alert: {\n          msg: msg,\n          type: type\n        }\n      });\n      setTimeout(() => this.setState({\n        alert: null\n      }), 5000);\n    };\n  }\n\n  render() {\n    const {\n      users,\n      loading,\n      user\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Router, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Navbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Alert, {\n      alert: this.state.alert,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: props => /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Search, {\n        searchUsers: this.searchUsers,\n        clearUsers: this.clearUsers,\n        showClear: users.length > 0 ? true : false,\n        setAlert: this.setAlert,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(Users, {\n        loading: loading,\n        users: users,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 19\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/about\",\n      component: About,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/user/:login\",\n      render: props => /*#__PURE__*/React.createElement(User, Object.assign({}, props, {\n        getUser: this.getUser,\n        user: user,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 15\n      }\n    })))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/elizabethshim/Documents/GitHub/udemy front to back/github-finder/src/App.js"],"names":["React","Fragment","Component","BrowserRouter","Router","Switch","Route","Navbar","Users","User","Search","Alert","About","axios","App","state","users","user","loading","alert","searchUsers","text","setState","res","get","process","env","REACT_APP_GITHUB_CLIENT_ID","REACT_APP_GITHUB_CLIENT_SECRET","data","items","getUser","username","clearUsers","setAlert","msg","type","setTimeout","render","props","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,QAAuD,kBAAvD;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,IAAP,MAAiB,yBAAjB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAOC,KAAP,MAAkB,2BAAlB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;;AAEA,MAAMC,GAAN,SAAkBZ,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAE1Ba,KAF0B,GAElB;AACNC,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,IAAI,EAAE,EAFA;AAGNC,MAAAA,OAAO,EAAE,KAHH;AAINC,MAAAA,KAAK,EAAE;AAJD,KAFkB;;AAAA,SAkB1BC,WAlB0B,GAkBZ,MAAMC,IAAN,IAAc;AAC1B,WAAKC,QAAL,CAAc;AAAEJ,QAAAA,OAAO,EAAE;AAAX,OAAd,EAD0B,CACQ;;AAElC,YAAMK,GAAG,GAAG,MAAMV,KAAK,CAACW,GAAN,CAAW,yCAAwCH,IAAK,cAAaI,OAAO,CAACC,GAAR,CAAYC,0BAA2B,mBAAkBF,OAAO,CAACC,GAAR,CAAYE,8BAA+B,EAAzK,CAAlB,CAH0B,CAI1B;;AACA,WAAKN,QAAL,CAAc;AAAEN,QAAAA,KAAK,EAAEO,GAAG,CAACM,IAAJ,CAASC,KAAlB;AAAyBZ,QAAAA,OAAO,EAAE;AAAlC,OAAd;AACD,KAxByB;;AAAA,SA2B1Ba,OA3B0B,GA2BhB,MAAOC,QAAP,IAAoB;AAC5B,WAAKV,QAAL,CAAc;AAAEJ,QAAAA,OAAO,EAAE;AAAX,OAAd;AAEA,YAAMK,GAAG,GAAG,MAAMV,KAAK,CAACW,GAAN,CACf,gCAA+BQ,QAAS,cACvCP,OAAO,CAACC,GAAR,CAAYC,0BAA2B;AAC/C,0BAA0BF,OAAO,CAACC,GAAR,CAAYE,8BAA+B,EAH/C,CAAlB,CAH4B,CAO5B;;AACA,WAAKN,QAAL,CAAc;AAAEL,QAAAA,IAAI,EAAEM,GAAG,CAACM,IAAZ;AAAkBX,QAAAA,OAAO,EAAE;AAA3B,OAAd;AACD,KApCyB;;AAAA,SAuC1Be,UAvC0B,GAuCb,MAAM,KAAKX,QAAL,CAAc;AAAEN,MAAAA,KAAK,EAAE,EAAT;AAAaE,MAAAA,OAAO,EAAE;AAAtB,KAAd,CAvCO;;AAAA,SA0C1BgB,QA1C0B,GA0Cf,CAACC,GAAD,EAAMC,IAAN,KAAe;AACxB,WAAKd,QAAL,CAAc;AAAEH,QAAAA,KAAK,EAAE;AAAEgB,UAAAA,GAAG,EAAEA,GAAP;AAAYC,UAAAA,IAAI,EAAEA;AAAlB;AAAT,OAAd;AAEAC,MAAAA,UAAU,CAAC,MAAM,KAAKf,QAAL,CAAc;AAAEH,QAAAA,KAAK,EAAE;AAAT,OAAd,CAAP,EAAuC,IAAvC,CAAV;AACD,KA9CyB;AAAA;;AAgD1BmB,EAAAA,MAAM,GAAE;AACN,UAAM;AAAEtB,MAAAA,KAAF;AAASE,MAAAA,OAAT;AAAkBD,MAAAA;AAAlB,QAA2B,KAAKF,KAAtC;AAEA,wBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAG,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAE,KAAKA,KAAL,CAAWI,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AACE,MAAA,IAAI,EAAC,GADP;AAEE,MAAA,MAAM,EAAEoB,KAAK,iBACb,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,MAAD;AAAQ,QAAA,WAAW,EAAE,KAAKnB,WAA1B;AAAuC,QAAA,UAAU,EAAE,KAAKa,UAAxD;AAAoE,QAAA,SAAS,EAC7EjB,KAAK,CAACwB,MAAN,GAAe,CAAf,GAAmB,IAAnB,GAAyB,KADzB;AAEA,QAAA,QAAQ,EAAE,KAAKN,QAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,eAKE,oBAAC,KAAD;AAAO,QAAA,OAAO,EAAEhB,OAAhB;AAAyB,QAAA,KAAK,EAAEF,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,CAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAYE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,QAAlB;AAA2B,MAAA,SAAS,EAAEJ,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZF,eAaE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,cAAlB;AAAiC,MAAA,MAAM,EAAE2B,KAAK,iBAC5C,oBAAC,IAAD,oBAAUA,KAAV;AAAkB,QAAA,OAAO,EAAE,KAAKR,OAAhC;AAAyC,QAAA,IAAI,EAAEd,IAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbF,CAFF,CAFF,CADF,CADF;AA2BD;;AA9EyB;;AAiF5B,eAAeH,GAAf","sourcesContent":["import React, { Fragment, Component } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Users from './components/users/Users';\nimport User from './components/users/User';\nimport Search from './components/users/Search';\nimport Alert from './components/layout/Alert'; \nimport About from './components/pages/About'\n\nimport axios from 'axios';\nimport './App.css';\n\nclass App extends Component {\n\n  state = {\n    users: [],\n    user: {},\n    loading: false,\n    alert: null\n  }\n\n  // async componentDidMount () {\n  //   // changing states\n  //   this.setState({loading: true});\n  //   const res = await axios.get(`https://api.github.com/users?client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secrets=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n  //   // res is request\n  //   this.setState({ users: res.data, loading: false });\n  // }\n\n  // search github users\n  searchUsers = async text => {\n    this.setState({ loading: true }); // spinner as it searches\n\n    const res = await axios.get(`https://api.github.com/search/users?q=${text}&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secrets=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n    // res is request\n    this.setState({ users: res.data.items, loading: false });\n  }\n\n  // get a single github user\n  getUser = async (username) => {\n    this.setState({ loading: true });\n\n    const res = await axios.get(\n      `https://api.github.com/users/${username}?client_id=${\n        process.env.REACT_APP_GITHUB_CLIENT_ID}\n        &client_secrets=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n    // res is request\n    this.setState({ user: res.data, loading: false });\n  }\n\n  // clear users from state\n  clearUsers = () => this.setState({ users: [], loading: false });\n\n  // set alert\n  setAlert = (msg, type) => {\n    this.setState({ alert: { msg: msg, type: type }});\n\n    setTimeout(() => this.setState({ alert: null }), 5000)\n  }\n\n  render(){\n    const { users, loading, user } = this.state;\n\n    return (\n      <Router>\n        <div className = 'App'>\n          <Navbar />\n          <div className=\"container\">\n            <Alert alert={this.state.alert} />\n            <Switch>\n              <Route exact\n                path='/'\n                render={props => (\n                <Fragment>\n                  <Search searchUsers={this.searchUsers} clearUsers={this.clearUsers} showClear ={\n                  users.length > 0 ? true: false }\n                  setAlert={this.setAlert}\n                  />\n                  <Users loading={loading} users={users}/>\n                </Fragment>\n              )} />\n              <Route exact path='/about' component={About} />\n              <Route exact path='/user/:login' render={props =>(\n                <User {...props } getUser={this.getUser} user={user} />\n              )} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}