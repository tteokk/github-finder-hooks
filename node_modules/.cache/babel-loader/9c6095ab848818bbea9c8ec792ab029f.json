{"ast":null,"code":"var _jsxFileName = \"/Users/elizabethshim/Documents/github/udemy front to back/github-finder-hooks/src/components/users/User.js\";\nimport React, { Fragment, useEffect, useContext } from 'react';\nimport Spinner from '../layout/Spinner';\nimport Repos from '../repos/Repos';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport GithubContext from '../../context/github/githubContext'; // replacement of component did mount class to a functional component\n// is using useEffect hook\n// props and methods\n\nconst User = _ref => {\n  let {\n    match\n  } = _ref;\n  const githubContext = useContext(GithubContext);\n  const {\n    getUser,\n    loading,\n    user,\n    repos,\n    getUserRepos\n  } = githubContext;\n  useEffect(() => {\n    getUser(match.params.login);\n    getUserRepos(match.params.login); // eslint-disable-next-line\n  }, []); // in [] goes dependacies, requests for stuff only once\n  // the eslint thing disables the warning that asks to put\n  // getUser and getUserRepos as dependacies in []\n  // componentDidMount() {\n  //     this.props.getUser(match.params.login);\n  //     this.props.getUserRepos(tmatch.params.login);\n  //     // log in was taken from App.js where route path :login\n  //\n\n  const {\n    name,\n    company,\n    avatar_url,\n    location,\n    bio,\n    blog,\n    login,\n    html_url,\n    followers,\n    following,\n    public_repos,\n    public_gists,\n    hireable\n  } = user; // from github api\n\n  if (loading) return /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 25\n    }\n  }); // the rendering when it actually fetches information from api\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    className: \"btn btn-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, \"Back To Search\"), \"Hireable:\", ' ', hireable ? /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-check text-success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-times-circle text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card grid-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"all-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: avatar_url,\n    className: \"round-img\",\n    alt: \"\",\n    style: {\n      width: '150px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 15\n    }\n  }, name), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 15\n    }\n  }, \"Location: \", location)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, bio && /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 19\n    }\n  }, \"Bio\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 19\n    }\n  }, bio)), /*#__PURE__*/React.createElement(\"a\", {\n    href: html_url,\n    className: \"btn btn-dark my-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 15\n    }\n  }, \"Visit Github Profile\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }, login && /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 23\n    }\n  }, \"Username: \"), \" \", login)), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }, company && /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 23\n    }\n  }, \"Company: \"), \" \", company)), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  }, blog && /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 23\n    }\n  }, \"Website: \"), \" \", blog))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"badge badge-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, \"Followers: \", followers), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"badge badge-success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, \"Following: \", following), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"badge badge-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, \"Public Repos: \", public_repos), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"badge badge-dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }, \"Public Gists: \", public_gists)), /*#__PURE__*/React.createElement(Repos, {\n    repos: repos,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  }));\n};\n\nexport default User;","map":{"version":3,"sources":["/Users/elizabethshim/Documents/github/udemy front to back/github-finder-hooks/src/components/users/User.js"],"names":["React","Fragment","useEffect","useContext","Spinner","Repos","PropTypes","Link","GithubContext","User","match","githubContext","getUser","loading","user","repos","getUserRepos","params","login","name","company","avatar_url","location","bio","blog","html_url","followers","following","public_repos","public_gists","hireable","width"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,aAAP,MAA0B,oCAA1B,C,CAEA;AACA;AAEA;;AACA,MAAMC,IAAI,GAAG,QAAe;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;AACxB,QAAMC,aAAa,GAAGR,UAAU,CAACK,aAAD,CAAhC;AAEA,QAAM;AAAEI,IAAAA,OAAF;AAAWC,IAAAA,OAAX;AAAoBC,IAAAA,IAApB;AAA0BC,IAAAA,KAA1B;AAAiCC,IAAAA;AAAjC,MAAkDL,aAAxD;AAEAT,EAAAA,SAAS,CAAE,MAAM;AACbU,IAAAA,OAAO,CAACF,KAAK,CAACO,MAAN,CAAaC,KAAd,CAAP;AACAF,IAAAA,YAAY,CAACN,KAAK,CAACO,MAAN,CAAaC,KAAd,CAAZ,CAFa,CAGb;AACH,GAJQ,EAIN,EAJM,CAAT,CALwB,CAWxB;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;;AACA,QAAM;AACFC,IAAAA,IADE;AAEFC,IAAAA,OAFE;AAGFC,IAAAA,UAHE;AAIFC,IAAAA,QAJE;AAKFC,IAAAA,GALE;AAMFC,IAAAA,IANE;AAOFN,IAAAA,KAPE;AAQFO,IAAAA,QARE;AASFC,IAAAA,SATE;AAUFC,IAAAA,SAVE;AAWFC,IAAAA,YAXE;AAYFC,IAAAA,YAZE;AAaFC,IAAAA;AAbE,MAcFhB,IAdJ,CArBwB,CAqCxB;;AAEA,MAAID,OAAJ,EAAa,oBAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP,CAvCW,CAyCxB;;AAEA,sBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,GAAT;AAAa,IAAA,SAAS,EAAC,eAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAIY,GAJZ,EAKGiB,QAAQ,gBACP;AAAG,IAAA,SAAS,EAAC,2BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADO,gBAGP;AAAG,IAAA,SAAS,EAAC,iCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,eAUE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,GAAG,EAAET,UADP;AAEE,IAAA,SAAS,EAAC,WAFZ;AAGE,IAAA,GAAG,EAAC,EAHN;AAIE,IAAA,KAAK,EAAE;AAAEU,MAAAA,KAAK,EAAE;AAAT,KAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKZ,IAAL,CAPF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAcG,QAAd,CARF,CADF,eAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,GAAG,iBACF,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIA,GAAJ,CAFF,CAFJ,eAOE;AAAG,IAAA,IAAI,EAAEE,QAAT;AAAmB,IAAA,SAAS,EAAC,mBAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAPF,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,KAAK,iBACJ,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,OAC+BA,KAD/B,CAFJ,CADF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,OAAO,iBACN,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,OAC8BA,OAD9B,CAFJ,CATF,eAiBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGI,IAAI,iBACH,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,OAC8BA,IAD9B,CAFJ,CAjBF,CAVF,CAXF,CAVF,eA0DE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAiDE,SAAjD,CADF,eAEE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAiDC,SAAjD,CAFF,eAGE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAkDC,YAAlD,CAHF,eAIE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAiDC,YAAjD,CAJF,CA1DF,eAgEE,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAEd,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhEF,CADJ;AAoEC,CA/GL;;AAiHA,eAAeN,IAAf","sourcesContent":["import React, { Fragment, useEffect, useContext } from 'react'\nimport Spinner from '../layout/Spinner'\nimport Repos from '../repos/Repos'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\nimport GithubContext from '../../context/github/githubContext'\n\n// replacement of component did mount class to a functional component\n// is using useEffect hook\n\n// props and methods\nconst User = ({ match }) => {\n    const githubContext = useContext(GithubContext);\n\n    const { getUser, loading, user, repos, getUserRepos } = githubContext;\n    \n    useEffect( () => {\n        getUser(match.params.login);\n        getUserRepos(match.params.login);\n        // eslint-disable-next-line\n    }, []);\n\n    // in [] goes dependacies, requests for stuff only once\n    // the eslint thing disables the warning that asks to put\n    // getUser and getUserRepos as dependacies in []\n\n    // componentDidMount() {\n    //     this.props.getUser(match.params.login);\n    //     this.props.getUserRepos(tmatch.params.login);\n\n    //     // log in was taken from App.js where route path :login\n    //\n    const {\n        name,\n        company,\n        avatar_url,\n        location,\n        bio,\n        blog,\n        login,\n        html_url,\n        followers,\n        following,\n        public_repos,\n        public_gists,\n        hireable\n    } = user;\n\n    // from github api\n\n    if (loading) return <Spinner />;\n\n    // the rendering when it actually fetches information from api\n\n    return (\n        <Fragment>\n          <Link to='/' className='btn btn-light'>\n            Back To Search\n          </Link>\n          Hireable:{' '}\n          {hireable ? (\n            <i className='fas fa-check text-success' />\n          ) : (\n            <i className='fas fa-times-circle text-danger' />\n          )}\n          <div className='card grid-2'>\n            <div className='all-center'>\n              <img\n                src={avatar_url}\n                className='round-img'\n                alt=''\n                style={{ width: '150px' }}\n              />\n              <h1>{name}</h1>\n              <p>Location: {location}</p>\n            </div>\n            <div>\n              {bio && (\n                <Fragment>\n                  <h3>Bio</h3>\n                  <p>{bio}</p>\n                </Fragment>\n              )}\n              <a href={html_url} className='btn btn-dark my-1'>\n                Visit Github Profile\n              </a>\n              <ul>\n                <li>\n                  {login && (\n                    <Fragment>\n                      <strong>Username: </strong> {login}\n                    </Fragment>\n                  )}\n                </li>\n    \n                <li>\n                  {company && (\n                    <Fragment>\n                      <strong>Company: </strong> {company}\n                    </Fragment>\n                  )}\n                </li>\n    \n                <li>\n                  {blog && (\n                    <Fragment>\n                      <strong>Website: </strong> {blog}\n                    </Fragment>\n                  )}\n                </li>\n              </ul>\n            </div>\n          </div>\n          <div className='card text-center'>\n            <div className='badge badge-primary'>Followers: {followers}</div>\n            <div className='badge badge-success'>Following: {following}</div>\n            <div className='badge badge-light'>Public Repos: {public_repos}</div>\n            <div className='badge badge-dark'>Public Gists: {public_gists}</div>\n          </div>\n          <Repos repos={repos} />\n        </Fragment>\n      );\n    };    \n\nexport default User\n"]},"metadata":{},"sourceType":"module"}