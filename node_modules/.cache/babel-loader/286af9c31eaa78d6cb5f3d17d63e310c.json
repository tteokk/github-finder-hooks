{"ast":null,"code":"var _jsxFileName = \"/Users/elizabethshim/Documents/github/udemy front to back/github-finder-hooks/src/App.js\";\nimport React, { Fragment, useState, useContext } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Users from './components/users/Users';\nimport User from './components/users/User';\nimport Search from './components/users/Search';\nimport Alert from './components/layout/Alert';\nimport About from './components/pages/About';\nimport axios from 'axios';\nimport GithubState from './context/github/GithubState';\nimport './App.css';\n\nconst App = props => {\n  const [users, setUsers] = useState([]); // [] means array\n\n  const [user, setUser] = useState({}); // {} means object\n\n  const [repos, setRepos] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [alert, setAlert] = useState(null); // state = {\n  //   users: [],\n  //   user: {},\n  //   loading: false,\n  //   alert: null,\n  //   repos: []\n  // }\n  // async componentDidMount () {\n  //   // changing states\n  //   this.setState({loading: true});\n  //   const res = await axios.get(`https://api.github.com/users?client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secrets=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n  //   // res is request\n  //   this.setState({ users: res.data, loading: false });\n  // }\n  // get a single github user\n\n  const getUser = async username => {\n    setLoading(true);\n    const res = await axios.get(`https://api.github.com/users/${username}?client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}\n        &client_secrets=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`); // res is request\n\n    setUser(res.data);\n    setLoading(false);\n  }; // get users repos\n\n\n  const getUserRepos = async username => {\n    setLoading(true);\n    const res = await axios.get(`https://api.github.com/users/${username}/repos?per_page=5&sort=created:asc&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}\n        &client_secrets=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`); // res is request\n    //this.setState({ repos: res.data, loading: false });\n\n    setRepos(res.data);\n    setLoading(false);\n  }; // clear users from state\n\n\n  const clearUsers = () => {\n    setUsers([]);\n    setLoading(false);\n  }; // set alert\n\n\n  const showAlert = (msg, type) => {\n    setAlert({\n      msg,\n      type\n    });\n    setTimeout(() => setAlert(null), 5000);\n  };\n\n  return /*#__PURE__*/React.createElement(GithubState, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    alert: this.state.alert,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    render: props => /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Search, {\n      clearUsers: clearUsers,\n      showClear: users.length > 0 ? true : false,\n      setAlert: showAlert,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Users, {\n      loading: loading,\n      users: users,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 19\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/about\",\n    component: About,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/user/:login\",\n    render: props => /*#__PURE__*/React.createElement(User, Object.assign({}, props, {\n      getUser: getUser,\n      getUserRepos: getUserRepos,\n      repos: repos,\n      user: user,\n      loading: loading,\n      alert: alert,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 15\n    }\n  }))))));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/elizabethshim/Documents/github/udemy front to back/github-finder-hooks/src/App.js"],"names":["React","Fragment","useState","useContext","BrowserRouter","Router","Switch","Route","Navbar","Users","User","Search","Alert","About","axios","GithubState","App","props","users","setUsers","user","setUser","repos","setRepos","loading","setLoading","alert","setAlert","getUser","username","res","get","process","env","REACT_APP_GITHUB_CLIENT_ID","REACT_APP_GITHUB_CLIENT_SECRET","data","getUserRepos","clearUsers","showAlert","msg","type","setTimeout","state","length"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useContext } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Users from './components/users/Users';\nimport User from './components/users/User';\nimport Search from './components/users/Search';\nimport Alert from './components/layout/Alert'; \nimport About from './components/pages/About'\n\nimport axios from 'axios';\n\nimport GithubState from './context/github/GithubState';\n\nimport './App.css';\n\nconst App = (props) => {\n  const [users, setUsers] = useState([]); // [] means array\n  const [user, setUser] = useState({}); // {} means object\n  const [repos, setRepos] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [alert, setAlert] = useState(null);\n\n  // state = {\n  //   users: [],\n  //   user: {},\n  //   loading: false,\n  //   alert: null,\n  //   repos: []\n  // }\n\n  // async componentDidMount () {\n  //   // changing states\n  //   this.setState({loading: true});\n  //   const res = await axios.get(`https://api.github.com/users?client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secrets=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n  //   // res is request\n  //   this.setState({ users: res.data, loading: false });\n  // }\n\n  // get a single github user\n  const getUser = async (username) => {\n    setLoading(true);\n\n    const res = await axios.get(\n      `https://api.github.com/users/${username}?client_id=${\n        process.env.REACT_APP_GITHUB_CLIENT_ID}\n        &client_secrets=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n    // res is request\n    setUser(res.data);\n    setLoading(false);\n  }\n\n  // get users repos\n  const getUserRepos = async (username) => {\n    setLoading(true);\n\n    const res = await axios.get(\n      `https://api.github.com/users/${username}/repos?per_page=5&sort=created:asc&client_id=${\n        process.env.REACT_APP_GITHUB_CLIENT_ID}\n        &client_secrets=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n    // res is request\n    //this.setState({ repos: res.data, loading: false });\n    setRepos(res.data);\n    setLoading(false);\n  }\n\n  // clear users from state\n  const clearUsers = () => {\n    setUsers([]);\n    setLoading(false);\n  }\n\n  // set alert\n  const showAlert = (msg, type) => {\n    setAlert({ msg, type });\n\n    setTimeout(() => setAlert(null), 5000)\n  }\n\n  return (\n    <GithubState>\n      <Router>\n        <div className = 'App'>\n          <Navbar />\n          <div className=\"container\">\n            <Alert alert={this.state.alert} />\n            <Switch>\n              <Route exact\n                path='/'\n                render={props => (\n                <Fragment>\n                  <Search\n                  clearUsers={clearUsers}\n                  showClear ={users.length > 0 ? true: false }\n                  setAlert={showAlert}\n                  />\n                  <Users loading={loading} users={users}/>\n                </Fragment>\n              )} />\n              <Route exact path='/about' component={About} />\n              <Route exact path='/user/:login' render={props =>(\n                <User {...props } getUser={getUser} \n                getUserRepos={getUserRepos}\n                repos={repos}\n                user={user} loading={loading}\n                alert={alert} />\n              )} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    </GithubState>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}