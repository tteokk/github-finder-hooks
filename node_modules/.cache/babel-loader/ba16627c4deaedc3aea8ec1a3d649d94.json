{"ast":null,"code":"var _jsxFileName = \"/Users/elizabethshim/Documents/github/udemy front to back/github-finder-hooks/src/context/alert/AlertState.js\";\n// actions\n// i.e. when we search users and it makes a request to github\n// cleaning up app.js\n// using types\nimport React, { useReducer } from 'react';\nimport axios from 'axios';\nimport AlertContext from './alertContext';\nimport AlertReducer from './alertReducer';\nimport { SET_ALERT, REMOVE_ALERT } from '../types'; // using axios for requests\n// useReducer is a hook\n// creating initial state\n\nconst AlertState = props => {\n  const initialState = null; // use reducer hook\n\n  const [state, dispatch] = useReducer(AlertReducer, initialState); // set alert\n\n  const setAlert = (msg, type) => {\n    dispatch({\n      type: SET_ALERT,\n      payload: {\n        msg,\n        type\n      }\n    });\n    setTimeout(() => dispatch({\n      type: REMOVE_ALERT\n    }), 5000);\n  };\n\n  return /*#__PURE__*/React.createElement(AlertContext.Provider, {\n    value: {\n      alert: state,\n      setAlert\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\nexport default AlertState;","map":{"version":3,"sources":["/Users/elizabethshim/Documents/github/udemy front to back/github-finder-hooks/src/context/alert/AlertState.js"],"names":["React","useReducer","axios","AlertContext","AlertReducer","SET_ALERT","REMOVE_ALERT","AlertState","props","initialState","state","dispatch","setAlert","msg","type","payload","setTimeout","alert","children"],"mappings":";AAAA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SACIC,SADJ,EACeC,YADf,QAEO,UAFP,C,CAIA;AACA;AAEA;;AACA,MAAMC,UAAU,GAAGC,KAAK,IAAI;AACxB,QAAMC,YAAY,GAAG,IAArB,CADwB,CAGxB;;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,UAAU,CAAEG,YAAF,EAAgBK,YAAhB,CAApC,CAJwB,CAMxB;;AACA,QAAMG,QAAQ,GAAG,CAACC,GAAD,EAAMC,IAAN,KAAe;AAC5BH,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAET,SADD;AAELU,MAAAA,OAAO,EAAE;AAAEF,QAAAA,GAAF;AAAOC,QAAAA;AAAP;AAFJ,KAAD,CAAR;AAKAE,IAAAA,UAAU,CAAC,MAAML,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAER;AAAR,KAAD,CAAf,EAAyC,IAAzC,CAAV;AACH,GAPD;;AASA,sBACA,oBAAC,YAAD,CAAc,QAAd;AACA,IAAA,KAAK,EAAG;AACJW,MAAAA,KAAK,EAAEP,KADH;AAEJE,MAAAA;AAFI,KADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKKJ,KAAK,CAACU,QALX,CADA;AASH,CAzBD;;AA2BA,eAAeX,UAAf","sourcesContent":["// actions\n// i.e. when we search users and it makes a request to github\n// cleaning up app.js\n// using types\n\nimport React, { useReducer } from 'react';\nimport axios from 'axios';\nimport AlertContext from './alertContext';\nimport AlertReducer from './alertReducer';\nimport {\n    SET_ALERT, REMOVE_ALERT\n} from '../types';\n\n// using axios for requests\n// useReducer is a hook\n\n// creating initial state\nconst AlertState = props => {\n    const initialState = null;\n\n    // use reducer hook\n    const [state, dispatch] = useReducer (AlertReducer, initialState);\n\n    // set alert\n    const setAlert = (msg, type) => {\n        dispatch({\n            type: SET_ALERT,\n            payload: { msg, type }\n        });\n\n        setTimeout(() => dispatch({ type: REMOVE_ALERT }), 5000)\n    }\n    \n    return (\n    <AlertContext.Provider\n    value ={{\n        alert: state,\n        setAlert\n    }}>\n        {props.children}\n    </AlertContext.Provider>\n    )\n}\n\nexport default AlertState;"]},"metadata":{},"sourceType":"module"}